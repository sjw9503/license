4-1. 소프트웨어 개발 방법론 테일러링 : 기존 SW 개발 모델을 최적화

  1) 방법론 테일러링의 필요성 판단기준
    - 내부적 요건 : 목표 환경, 요구사항, 프로젝트 규모, 보유 기술
    - 외부적 요건 : 법적 제약사항, 표준 품질 기준 등
    
  2) 방법론 테일러링 프로세스 : 일정 및 자원현황 반영 > 개발 단계별 절차 수립 > 메뉴얼 작성

  3) SW 개발 프로젝트 개요
    - SW 개발 프로젝트 관리 요소(5가지) : 일정, 비용, 투입 자원, 위험, 품질
    - SW 개발 프로젝트 계획 및 예측
      * 프로젝트 비용을 결정하는 요소
        ㅇ 프로젝트 요소 : 규모, 신뢰도, 복잡도
        ㅇ 자원 요소 : 인적자원, 하드웨어, 라이센스
        ㅇ 생산성 요소 : 개발 기간, 개발자 능력

4-2. 프로젝트 일정 관리

  1) 프로젝트 일정관리 원칙
    - 프로젝트 참여 인원은 프로젝트 시작 전에 결정(Brooks의 법칙 : 프로젝트 중 인원 투입시 일정을 지연시킴)

  2) 프로젝트 일정 계획 방법론
    - 소요 기간의 예측 가능성에 때라 PERT, CPM으로 구분
    - PERT(예측 불확실) 계산법 : 예측치 = (낙관치+(4*기대치)+비관치)/6
    - CPM(예측 확실) : 임계 경로(가장 긴 소요시간으로 산정)로 개발 기간 결정

4-3. 프로젝트 비용산정 모델
  
  1) SW 사업비 종류 (6가지) : 계획 수립, 개발, 유지 보수, 재개발, DB 구축, 환경 구축

  2) SW 비용 산정
    - SW 비용 산정 정의 : 상향식, 하향식 기법
    - SW 비용 결정 요소
      * 프로젝트 : 제품 복잡도, 시스템 크기, 요구 신뢰도
      * 자원 : 인적자원, 하드웨어 자원, 소프트웨어 자원
      * 생산성 : 개발자 역량, 개발 기간

  3) 하향식 비용 산정 기법(비과학적) : 전체 비용을 산정 후 각 기능별로 세분화
    - 전문가 측정 기법 : 경험이 있는 둘 이상의 전문가들이 신속하게 비용 산정(개인적, 주관적 판단)
    - 델파이 측정 기법 : 조정자가 여러 전문가의 의견을 종합 비용 산정(전문자 측정 기법 단점 보완)

  4) 상향식 비용 산정 기법 : 세부적인 작업 단위별로 비용 산정 뒤 전체 비용 산정
    - (LOC(Line Of Code), 단계별 노력 기법(Effort Per Task), 수학적 산정 기법 존재
    - 측정 용이, 이해 쉬움
    - LOC기법 : 소스 코드 라인 수의 비관치(가장 적은 라인 수), 낙관치(가장 적은 라인 수), 기대치(평균 라인 수)를 통해 예측치 계산 후 비용 산정 기법
      * 예측치 = (낙관치+(4*기대치)+비관치/6
    - LOC 기반 비용 산정 공식
      * 노력 = 개발 기간*투입인원 = LOC/인당 월평균 생산 코드 라인
      * 개발 비용 = 노력 * 월평균 인건비
      * 개발 기간 = LOC/인당 월평균 생산 코드 라인/투입 인원
      * 개발 기간 = LOC/(인당 월평균 생산 코드 라인*투입 인원)
      * 생산성 = LOC/노력
    - 단계별 노력 기법 (LOC 기법 보완) : 노력에 가중치를 별도 반영하여 측정
    - 수학적 산정 기법
      * COCOMO : LOC 기반 비용 산정 기법
        ㅇ Basic, Intermediate, Detailed 모델로 구분
        ㅇ 규모에 따라 나뉨
          > Organic(조직, 5만 라인 이하)
          > Semi-Deached(반분리형, 30만 라인 이하)
          > Embedded(내장형, 30만 라인 이상)
      * Putnam : 노력 분포도 기반
      * 기능 점수 기법(Function Point) : 기능 증대 요인에 따라 가중치 부여 비용 산정
        ㅇ 기능 증대 요인 : 입력, 출력, 사용자 질의, 데이터 파일, 인터페이스



      









  



    
